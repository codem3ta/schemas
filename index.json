{
  "schemas": {
    "asset": {
      "$id": "https://codemeta.de/schemas/asset",
      "type": "object",
      "collection": "assets",
      "properties": {
        "identifier": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "articleId": {
          "type": "string"
        },
        "ownedBy": {
          "type": "string",
          "objectId": true,
          "relation": "manyToOne",
          "target": "https://codemeta.de/schemas/party"
        }
      },
      "required": [
        "identifier"
      ],
      "name": "asset"
    },
    "endpoint": {
      "$id": "https://codemeta.de/schemas/asset/endpoint",
      "type": "object",
      "collection": "assets",
      "allOf": [
        {
          "$ref": "https://codemeta.de/schemas/asset"
        }
      ],
      "properties": {
        "networkInterfaces": {
          "description": "The network interfaces of the endpoint",
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "ipv4": {
                "description": "The IP address of the network interface",
                "type": "string",
                "format": "ipv4"
              },
              "mac": {
                "description": "The MAC address of the network interface",
                "type": "string",
                "pattern": "^([0-9A-Fa-f]{2}[:-]){5}([0-9A-Fa-f]{2})$"
              },
              "network": {
                "description": "The network name or identifier",
                "type": "string"
              }
            },
            "required": [
              "ipv4",
              "mac",
              "network"
            ]
          }
        },
        "os": {
          "description": "The operating system of the endpoint",
          "type": "string"
        },
        "osVersion": {
          "description": "The version of the operating system",
          "type": "string"
        }
      }
    },
    "vm": {
      "$id": "https://codemeta.de/schemas/asset/vm",
      "type": "object",
      "collection": "assets",
      "allOf": [
        {
          "$ref": "https://codemeta.de/schemas/asset/endpoint"
        }
      ],
      "properties": {
        "externalId": {
          "description": "The external id of the virtual machine.",
          "type": "string"
        },
        "name": {
          "description": "The name of the virtual machine.",
          "type": "string"
        },
        "type": {
          "type": "string",
          "const": "vm",
          "default": "vm"
        },
        "host": {
          "description": "The host of the virtual maschine.",
          "type": "string",
          "relation": "manyToOne",
          "target": "https://codemeta.de/schemas/asset/host",
          "objectId": true
        },
        "state": {
          "description": "The state of the virtual machine.",
          "type": "string",
          "enum": [
            "running",
            "stopped",
            "paused"
          ]
        },
        "cpus": {
          "description": "The cpu count of the virtual machine.",
          "type": "number"
        },
        "memory": {
          "description": "The memory amount of the virtual machine.",
          "type": "number"
        },
        "interface": {
          "description": "The interface with the credentials.",
          "type": "string",
          "relation": "manyToOne",
          "target": "https://codemeta.de/schemas/interface",
          "objectId": true,
          "database": "config"
        }
      },
      "required": [
        "name"
      ]
    },
    "host": {
      "$id": "https://codemeta.de/schemas/asset/host",
      "type": "object",
      "collection": "assets",
      "allOf": [
        {
          "$ref": "https://codemeta.de/schemas/asset/endpoint"
        }
      ],
      "properties": {
        "type": {
          "type": "string",
          "const": "host",
          "default": "host"
        },
        "externalId": {
          "description": "The external id of the host.",
          "type": "string"
        },
        "name": {
          "description": "The name of the host.",
          "type": "string"
        },
        "rack": {
          "description": "The rack of the host.",
          "type": "string",
          "relation": "manyToOne",
          "target": "https://codemeta.de/schemas/asset/rack",
          "objectId": true
        },
        "cpus": {
          "description": "The cpu count of the host.",
          "type": "number"
        },
        "memory": {
          "description": "The memory amount of the host.",
          "type": "number"
        },
        "interface": {
          "description": "The interface with the credentials.",
          "type": "string",
          "relation": "manyToOne",
          "target": "https://codemeta.de/schemas/interface",
          "objectId": true,
          "database": "config"
        }
      },
      "required": [
        "name"
      ]
    },
    "usv": {
      "$id": "https://codemeta.de/schemas/asset/usv",
      "type": "object",
      "collection": "assets",
      "allOf": [
        {
          "$ref": "https://codemeta.de/schemas/asset/endpoint"
        }
      ],
      "properties": {
        "type": {
          "type": "string",
          "const": "usv",
          "default": "usv"
        },
        "rack": {
          "description": "The rack of the usv.",
          "type": "string",
          "relation": "manyToOne",
          "target": "https://codemeta.de/schemas/asset/rack",
          "objectId": true
        },
        "hosts": {
          "description": "An array of hosts for the usv.",
          "type": "array",
          "items": {
            "type": "string",
            "relation": "manyToOne",
            "target": "https://codemeta.de/schemas/asset/host",
            "objectId": true
          }
        },
        "state": {
          "description": "The state of the virtual machine.",
          "type": "string",
          "enum": [
            "online",
            "battery",
            "offline"
          ]
        },
        "remainingMinutes": {
          "description": "The remaining minutes.",
          "type": "number"
        },
        "title": {
          "description": "The title of the usv.",
          "type": "string"
        },
        "description": {
          "description": "The description of the usv.",
          "type": "string"
        },
        "manufacturer": {
          "description": "The manufacturer of the usv.",
          "type": "string"
        },
        "interface": {
          "description": "The interface with the credentials.",
          "type": "string",
          "relation": "manyToOne",
          "target": "https://codemeta.de/schemas/interface",
          "objectId": true,
          "database": "config"
        },
        "oids": {
          "title": "Diffrent oids for the usv.",
          "description": "Diffrent oids for the usv.",
          "type": "object",
          "properties": {
            "statusOID": {
              "description": "The oid thats used to query the status",
              "type": "string"
            },
            "remainingMinutesOID": {
              "description": "The oid thats used to query the remainingMinutesOID",
              "type": "string"
            }
          }
        }
      },
      "required": [
        "title",
        "interface"
      ]
    },
    "rack": {
      "$id": "https://codemeta.de/schemas/asset/rack",
      "title": "Rack",
      "collection": "assets",
      "allOf": [
        {
          "$ref": "https://codemeta.de/schemas/asset"
        }
      ],
      "description": "An rack",
      "type": "object",
      "properties": {
        "height": {
          "description": "The height of the rack.",
          "type": "number"
        },
        "width": {
          "description": "The with of the rack.",
          "type": "number"
        },
        "depth": {
          "description": "The depth of the rack.",
          "type": "number"
        },
        "title": {
          "description": "The title of the rack.",
          "type": "string"
        },
        "description": {
          "description": "The description of the rack.",
          "type": "string"
        },
        "room": {
          "description": "The room of the rack location.",
          "type": "string",
          "relation": "manyToOne",
          "target": "https://codemeta.de/schemas/asset/room",
          "objectId": true
        }
      },
      "required": [],
      "name": "rack"
    },
    "room": {
      "$id": "https://codemeta.de/schemas/asset/room",
      "title": "Room",
      "collection": "assets",
      "allOf": [
        {
          "$ref": "https://codemeta.de/schemas/asset"
        }
      ],
      "description": "An room",
      "type": "object",
      "properties": {
        "building": {
          "description": "The building where the room is located.",
          "type": "string"
        },
        "title": {
          "description": "The title of the room.",
          "type": "string"
        },
        "description": {
          "description": "The description of the room.",
          "type": "string"
        }
      },
      "required": [],
      "name": "room"
    },
    "bucket": {
      "$id": "https://codemeta.de/schemas/bucket",
      "title": "Bucket",
      "collection": "buckets",
      "name": "bucket",
      "description": "A bucket for items taken to a customer",
      "type": "object",
      "i18n": {
        "de": {
          "singular": "Bucket",
          "plural": "Buckets",
          "description": "Ein Bucket repr√§sentiert Waren, die mit zum Kunden genommen wurden."
        }
      },
      "properties": {
        "description": {
          "description": "The description of the bucket",
          "type": "string"
        },
        "user": {
          "description": "The user who created the bucket",
          "type": "string",
          "relation": "manyToOne",
          "objectId": true,
          "target": "https://codemeta.de/schemas/user"
        },
        "orderNumber": {
          "description": "The sales order number to which the bucket belongs",
          "type": "string"
        },
        "status": {
          "description": "The status of the bucket",
          "type": "string",
          "enum": [
            "OPEN",
            "CLOSED"
          ],
          "default": "OPEN"
        },
        "type": {
          "description": "The type of the bucket",
          "type": "string",
          "enum": [
            "RECEIVED",
            "DELIVERY"
          ]
        },
        "comment": {
          "description": "The comment of the bucket",
          "type": "string"
        },
        "customerNumber": {
          "description": "The customer number to which the items are taken",
          "type": "string"
        },
        "contact": {
          "description": "The contact person of the company that brought the items",
          "type": "string"
        },
        "value": {
          "description": "Value of items in the bucket in cents",
          "type": "number",
          "default": 0
        },
        "items": {
          "description": "The items in the bucket",
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "Unique id"
              },
              "articleNumber": {
                "description": "Weclapp article number",
                "type": "string"
              },
              "tanssId": {
                "description": "Tanss article id",
                "type": "string"
              },
              "tanssType": {
                "description": "Tanss article id",
                "type": "string",
                "enum": [
                  "null",
                  "PC",
                  "PERIPHERY"
                ],
                "default": "null"
              },
              "description": {
                "description": "Description of the article",
                "type": "string"
              },
              "quantity": {
                "description": "The quantity of the article",
                "type": "number",
                "minimum": 1
              },
              "value": {
                "description": "Value of item in cents",
                "type": "number",
                "default": 0
              }
            }
          }
        }
      },
      "required": [
        "user",
        "customerNumber",
        "type"
      ],
      "unevaluatedProperties": false
    },
    "project": {
      "$id": "https://codemeta.de/schemas/project",
      "title": "Project",
      "collection": "projects",
      "description": "A project",
      "type": "object",
      "properties": {
        "title": {
          "description": "The title of the project",
          "type": "string"
        },
        "linkedParty": {
          "description": "The party linked to the project",
          "type": "string",
          "relation": "manyToOne",
          "target": "https://codemeta.de/schemas/party"
        },
        "description": {
          "description": "The description of the project",
          "type": "string"
        },
        "deadline": {
          "description": "The deadline of the project",
          "type": "string",
          "format": "date-time"
        },
        "team": {
          "description": "The team of the project",
          "type": "string",
          "relation": "manyToOne",
          "target": "https://codemeta.de/schemas/team"
        },
        "timeEstimation": {
          "description": "The time estimation of the project in milliseconds",
          "type": "number",
          "minimum": 0
        },
        "status": {
          "description": "The status of the project",
          "type": "string"
        }
      },
      "required": [
        "title"
      ],
      "name": "project",
      "unevaluatedProperties": false,
      "inheritPermissionsFrom": "linkedParty",
      "searchable": true,
      "searchFields": [
        "title",
        "description"
      ]
    },
    "party": {
      "$id": "https://codemeta.de/schemas/party",
      "title": "Party",
      "collection": "parties",
      "description": "A person or organization",
      "type": "object",
      "i18n": {
        "de": {
          "singular": "Party",
          "plural": "Parties",
          "description": "Ein Party repr√§sentiert Organisationen oder Personen."
        }
      },
      "properties": {
        "partyType": {
          "description": "The type of the party",
          "type": "string",
          "enum": [
            "ORGANIZATION",
            "PERSON"
          ]
        },
        "company": {
          "description": "The company name",
          "type": "string"
        },
        "company2": {
          "description": "Additional company information",
          "type": "string"
        },
        "customer": {
          "description": "Indicates if the party is a customer",
          "type": "boolean"
        },
        "supplier": {
          "description": "Indicates if the party is a supplier",
          "type": "boolean"
        },
        "leadStatus": {
          "description": "The lead status of the party",
          "type": "string",
          "enum": [
            "CONVERTED",
            "DISQUALIFIED",
            "NEW",
            "PREQUALIFIED",
            "QUALIFIED"
          ]
        },
        "customerBlocked": {
          "description": "Indicates if the customer is blocked",
          "type": "boolean"
        },
        "customerNumber": {
          "description": "The customer number",
          "type": "string"
        },
        "supplierNumber": {
          "description": "The supplier number",
          "type": "string"
        },
        "phone": {
          "description": "The phone number",
          "type": "string"
        },
        "fax": {
          "description": "The fax number",
          "type": "string"
        },
        "website": {
          "description": "The website URL",
          "type": "string",
          "format": "uri"
        },
        "mobilePhone1": {
          "description": "The primary mobile phone number",
          "type": "string"
        },
        "mobilePhone2": {
          "description": "The secondary mobile phone number",
          "type": "string"
        },
        "phoneHome": {
          "description": "The home phone number",
          "type": "string"
        },
        "optInLetter": {
          "description": "Indicates if the party has opted in for letters",
          "type": "boolean"
        },
        "optInPhone": {
          "description": "Indicates if the party has opted in for phone calls",
          "type": "boolean"
        },
        "optInSms": {
          "description": "Indicates if the party has opted in for SMS",
          "type": "boolean"
        },
        "supplierOrderBlock": {
          "description": "Indicates if the supplier is order-blocked",
          "type": "boolean"
        },
        "purchaseViaPlafond": {
          "description": "Indicates if the purchase is made via plafond",
          "type": "boolean"
        },
        "email": {
          "description": "The email of the party",
          "type": "string",
          "format": "email"
        },
        "categories": {
          "description": "Categories associated with the party",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "addresses": {
          "description": "The addresses of the party",
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "https://codemeta.de/schemas/address"
          }
        },
        "weclapp": {
          "type": "string",
          "description": "The weclapp ID of the party"
        },
        "salutation": {
          "description": "The salutation",
          "type": "string",
          "enum": [
            "COMPANY",
            "FAMILY",
            "MR",
            "MRS",
            "NO_SALUTATION"
          ]
        },
        "firstName": {
          "description": "The first name",
          "type": "string"
        },
        "lastName": {
          "description": "The last name",
          "type": "string"
        },
        "title": {
          "description": "The title",
          "type": "string"
        },
        "initials": {
          "description": "The initials of the party",
          "type": "string"
        },
        "birthDate": {
          "description": "The birth date of the party",
          "type": "integer"
        },
        "partyEmailAddresses": {
          "description": "The email addresses of the party",
          "type": "array",
          "items": {
            "type": "string",
            "objectId": true,
            "relation": "manyToOne",
            "target": "https://codemeta.de/schemas/emailAddresses"
          }
        },
        "headquarter": {
          "description": "The headquarter of the party",
          "type": "string",
          "objectId": true,
          "target": "https://codemeta.de/schemas/party",
          "relation": "manyToOne"
        },
        "slug": {
          "description": "The slug of the party",
          "type": "string"
        }
      },
      "required": [
        "partyType"
      ],
      "name": "party",
      "searchable": true,
      "searchFields": [
        "company",
        "company2",
        "firstName",
        "lastName",
        "email"
      ]
    },
    "person": {
      "$id": "https://codemeta.de/schemas/party/person",
      "type": "object",
      "collection": "parties",
      "name": "person",
      "properties": {
        "partyType": {
          "const": "PERSON",
          "default": "PERSON"
        },
        "salutation": {
          "description": "The salutation",
          "type": "string",
          "enum": [
            "COMPANY",
            "FAMILY",
            "MR",
            "MRS",
            "NO_SALUTATION"
          ]
        },
        "firstName": {
          "description": "The first name",
          "type": "string"
        },
        "lastName": {
          "description": "The last name",
          "type": "string"
        },
        "title": {
          "description": "The title",
          "type": "string"
        },
        "initials": {
          "description": "The initials of the party",
          "type": "string"
        },
        "birthDate": {
          "description": "The birth date of the party",
          "type": "integer"
        }
      },
      "allOf": [
        {
          "$ref": "https://codemeta.de/schemas/party"
        }
      ]
    },
    "organization": {
      "$id": "https://codemeta.de/schemas/party/organization",
      "type": "object",
      "collection": "parties",
      "name": "organization",
      "allOf": [
        {
          "$ref": "https://codemeta.de/schemas/party"
        }
      ],
      "properties": {
        "partyType": {
          "const": "ORGANIZATION",
          "default": "ORGANIZATION"
        }
      }
    },
    "secret": {
      "$id": "https://codemeta.de/schemas/secret",
      "title": "Secret",
      "name": "secret",
      "collection": "secrets",
      "description": "A password or other encrypted secret. Can include an encrypted file.",
      "i18n": {
        "de": {
          "singular": "Geheimnis",
          "plural": "Geheimnisse",
          "description": "Die Objekte enthalten verschl√ºsselte Nachrichten. Zum Lesen ist zus√§tzlich der Schl√ºssel aus dem Link erforderlich."
        }
      },
      "type": "object",
      "properties": {
        "secret": {
          "description": "The encrypted secret",
          "type": "array",
          "items": {
            "type": "integer"
          }
        },
        "iv": {
          "description": "The initialization vector",
          "type": "array",
          "items": {
            "type": "integer"
          }
        },
        "notify": {
          "description": "The email address to be notified once the secret has been opened.",
          "type": "string",
          "format": "email"
        },
        "attachments": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "description": "The ID of the attachment",
                "type": "string"
              },
              "filename": {
                "description": "The name of the attachment",
                "type": "array",
                "items": {
                  "type": "integer"
                }
              },
              "type": {
                "description": "The MIME type of the attachment",
                "type": "string"
              },
              "size": {
                "description": "The size of the attachment in bytes",
                "type": "integer"
              }
            },
            "required": [
              "filename",
              "type",
              "size"
            ],
            "additionalProperties": false
          }
        }
      },
      "readOnce": true
    },
    "task": {
      "$id": "https://codemeta.de/schemas/task",
      "title": "Task",
      "collection": "tasks",
      "description": "A task",
      "type": "object",
      "i18n": {
        "de": {
          "singular": "Aufgabe",
          "plural": "Aufgaben",
          "description": "Eine Aufgabe auf die Zeiten erfasst werden k√∂nnen"
        }
      },
      "properties": {
        "title": {
          "description": "The title of the task",
          "type": "string"
        },
        "description": {
          "description": "The description of the task",
          "type": "string",
          "minLength": 10
        },
        "dueDate": {
          "description": "The due date for the task",
          "type": "string",
          "format": "date-time"
        },
        "user": {
          "description": "The user the task is for",
          "type": "string",
          "objectId": true,
          "target": "https://codemeta.de/schemas/user",
          "database": "config"
        },
        "customerId": {
          "description": "The wecalpp customer id",
          "type": "string"
        },
        "weclappTaskId": {
          "description": "The wecalpp task id",
          "type": "string"
        }
      },
      "required": [
        "title"
      ],
      "name": "task"
    },
    "activity": {
      "$id": "https://codemeta.de/schemas/activity",
      "title": "Time Record",
      "collection": "activities",
      "description": "A Time Record is a record of time spent on a task. It can be billable or non-billable.",
      "type": "object",
      "i18n": {
        "de": {
          "singular": "App",
          "plural": "Apps",
          "description": "Eine App, die die Codemeta API verwendet."
        }
      },
      "properties": {
        "description": {
          "description": "The description of the activity",
          "type": "string"
        },
        "startDate": {
          "description": "The beginning of the activity",
          "type": "string",
          "format": "date-time"
        },
        "endDate": {
          "description": "The end of the activity",
          "type": "string",
          "format": "date-time"
        },
        "voucher": {
          "description": "The voucher with which the activity is billed",
          "type": "string",
          "objectId": true,
          "relation": "manyToOne",
          "target": "https://codemeta.de/schemas/voucher"
        },
        "task": {
          "description": "The task to which the activity belongs",
          "type": "string",
          "objectId": true,
          "relation": "manyToOne",
          "target": "https://codemeta.de/schemas/task"
        },
        "project": {
          "description": "The project to which the activity belongs",
          "type": "string",
          "objectId": true,
          "relation": "manyToOne",
          "target": "https://codemeta.de/schemas/project"
        },
        "request": {
          "description": "The request to which the activity belongs",
          "type": "string",
          "objectId": true,
          "relation": "manyToOne",
          "target": "https://codemeta.de/schemas/request"
        },
        "user": {
          "description": "The user to which the activity belongs",
          "type": "string",
          "objectId": true,
          "relation": "manyToOne",
          "target": "https://codemeta.de/schemas/user"
        },
        "userFirstName": {
          "description": "The first name of the user to which the activity belongs",
          "type": "string"
        },
        "userLastName": {
          "description": "The last name of the user to which the activity belongs",
          "type": "string"
        },
        "customer": {
          "description": "The customer to which the activity belongs",
          "type": "string",
          "objectId": true,
          "relation": "manyToOne",
          "target": "https://codemeta.de/schemas/party"
        }
      },
      "required": [],
      "name": "activity",
      "unevaluatedProperties": true
    },
    "timeRecord": {
      "$id": "https://codemeta.de/schemas/timeRecord",
      "title": "Time Record",
      "collection": "timeRecords",
      "description": "A Time Record is a record of time spent on a task. It can be billable or non-billable.",
      "type": "object",
      "i18n": {
        "de": {
          "singular": "TimeRecord",
          "plural": "TimeRecords",
          "description": "Ein TimeRecord zum erfassen von einer Zeit"
        }
      },
      "properties": {
        "type": {
          "description": "The type of the timeRecord",
          "type": "string"
        },
        "title": {
          "description": "The title of the timeRecord",
          "type": "string"
        },
        "description": {
          "description": "The description of the timeRecord",
          "type": "string"
        },
        "task": {
          "description": "The task of the timeRecord in weclapp",
          "type": "string"
        },
        "duration": {
          "description": "The duration of the timeRecord in seconds",
          "type": "integer",
          "minimum": 0
        },
        "startDate": {
          "description": "The beginning of the activity",
          "type": "string",
          "format": "date-time"
        },
        "endDate": {
          "description": "The end of the activity",
          "type": "string",
          "format": "date-time"
        },
        "billableDurationSeconds": {
          "description": "The billable duration of the timeRecord in seconds",
          "type": "integer",
          "minimum": 0
        },
        "unbillableShortReason": {
          "description": "The reason why the timeRecord is not billable",
          "type": "string"
        },
        "unbillableLongReason": {
          "description": "The text that is shown on the invoice for the timeRecord",
          "type": "string"
        },
        "billable": {
          "description": "Whether the timeRecord is billable",
          "type": "boolean"
        },
        "billed": {
          "description": "Whether the timeRecord is billed",
          "type": "boolean"
        },
        "isFixedPricing": {
          "description": "Whether the timeRecord is fixed pricing",
          "type": "boolean"
        },
        "tanss": {
          "type": "number",
          "description": "The timeRecord's TANSS support ID"
        },
        "user": {
          "description": "The user to which the activity belongs",
          "type": "string",
          "objectId": true,
          "relation": "manyToOne",
          "target": "https://codemeta.de/schemas/user"
        },
        "weclappTimeRecordId": {
          "description": "A weclapp timeRecordId of the connected timeRecordId",
          "type": "string"
        },
        "orderItemId": {
          "description": "A orderItemId of the connected timeRecordId",
          "type": "string"
        },
        "salesOrderId": {
          "description": "A salesOrderId of the connected timeRecordId",
          "type": "string"
        },
        "customerId": {
          "description": "A customerId of the connected timeRecordId",
          "type": "string"
        },
        "weclappUserId": {
          "description": "A weclappUserId of the user who interacted withn the timeRecord",
          "type": "string"
        },
        "performanceRecordedStatus": {
          "description": "A performanceRecordedStatus of the connected timeRecordId",
          "type": "string"
        }
      },
      "required": [],
      "name": "timeRecord"
    },
    "travelRecord": {
      "$id": "https://codemeta.de/schemas/travelRecord",
      "title": "Travel Record",
      "collection": "activities",
      "description": "A record of travel for a user. It can be associated with a timeRecord and a customer.",
      "type": "object",
      "allOf": [
        {
          "$ref": "https://codemeta.de/schemas/activity"
        }
      ],
      "properties": {
        "timeRecord": {
          "description": "The timeRecord to which the travelRecord belongs",
          "type": "string",
          "objectId": true,
          "relation": "manyToOne",
          "target": "https://codemeta.de/schemas/timeRecord.json"
        },
        "transport": {
          "description": "The transport used for the travel",
          "type": "string",
          "enum": [
            "car",
            "train",
            "plane",
            "other"
          ]
        },
        "car": {
          "description": "The car used for the travel",
          "type": "string",
          "objectId": true,
          "relation": "manyToOne",
          "target": "https://codemeta.de/schemas/asset/car.json"
        },
        "distance": {
          "description": "The distance traveled in km for one way",
          "type": "number",
          "minimum": 0
        },
        "duration": {
          "description": "The duration of the travel in minutes for one way",
          "type": "number",
          "minimum": 0
        },
        "return": {
          "description": "If true the distance and duration will be multiplied by 2",
          "type": "boolean"
        },
        "flatrate": {
          "description": "The flatrate/zone used for the travel",
          "type": "string"
        },
        "price": {
          "description": "The price of the travel in EUR",
          "type": "number",
          "minimum": 0
        },
        "startAddress": {
          "description": "The start location of the travel",
          "$ref": "https://codemeta.de/schemas/address"
        },
        "destinationAddress": {
          "description": "The end location of the travel",
          "$ref": "https://codemeta.de/schemas/address"
        }
      },
      "required": [
        "transport"
      ],
      "name": "travelRecord",
      "unevaluatedProperties": false
    },
    "shipment": {
      "$id": "https://codemeta.de/schemas/shipment",
      "title": "Shipment",
      "description": "Information about a shipment",
      "type": "object",
      "collection": "shipments",
      "i18n": {
        "de": {
          "singular": "Lieferung",
          "plural": "Lieferungen",
          "description": "Lieferungen sind der Transport und die √úbergabe von Waren oder G√ºtern an einen Empf√§nger."
        }
      },
      "properties": {
        "shipmentNumber": {
          "description": "The shipment number",
          "type": "string"
        },
        "customerPurchaseOrderNumber": {
          "description": "The customer order number",
          "type": "string"
        },
        "customer": {
          "description": "The customer associated with the shipment",
          "type": "string",
          "objectId": true,
          "target": "https://codemeta.de/schemas/party"
        },
        "shortCustomer": {
          "title": "Short customer contact",
          "description": "The responsible contact person associated with the shipment",
          "type": "object",
          "properties": {
            "customerNumber": {
              "description": "The customer number",
              "type": "string"
            },
            "customerName": {
              "description": "The customer name",
              "type": "string"
            },
            "phoneNumber": {
              "description": "The phone number",
              "type": "string"
            },
            "email": {
              "description": "The email of the customer",
              "type": "string"
            },
            "firstName": {
              "description": "The first name",
              "type": "string"
            },
            "lastName": {
              "description": "The last name",
              "type": "string"
            }
          }
        },
        "callbackContact": {
          "title": "Callback contact",
          "type": "object",
          "description": "The contact person for callbacks",
          "properties": {
            "firstName": {
              "description": "The first name",
              "type": "string"
            },
            "lastName": {
              "description": "The last name",
              "type": "string"
            },
            "phoneNumber": {
              "description": "The phone number",
              "type": "string"
            }
          }
        },
        "onSiteContact_1": {
          "title": "First contact on site",
          "type": "object",
          "description": "The first responsible contact person on the delivery side.",
          "properties": {
            "firstName": {
              "description": "The first name",
              "type": "string"
            },
            "lastName": {
              "description": "The last name",
              "type": "string"
            },
            "phoneNumber": {
              "description": "The phone number",
              "type": "string"
            },
            "email": {
              "description": "The email",
              "type": "string"
            }
          }
        },
        "onSiteContact_2": {
          "title": "Second contact on site",
          "type": "object",
          "description": "The second responsible contact person on the delivery side.",
          "properties": {
            "firstName": {
              "description": "The first name",
              "type": "string"
            },
            "lastName": {
              "description": "The last name",
              "type": "string"
            },
            "phoneNumber": {
              "description": "The phone number",
              "type": "string"
            },
            "email": {
              "description": "The email",
              "type": "string"
            }
          }
        },
        "shipmentManager": {
          "title": "Shipment Manager",
          "type": "object",
          "description": "The employee associated with the shipment",
          "properties": {
            "firstName": {
              "description": "The first name",
              "type": "string"
            },
            "lastName": {
              "description": "The last name",
              "type": "string"
            }
          }
        },
        "isCallbackDesired": {
          "description": "Indicates whether a callback is desired.",
          "type": "boolean"
        },
        "additionalDeliveryInformation": {
          "title": "Additional delivery information",
          "description": "The additional remark information for the delivery",
          "type": "object",
          "properties": {
            "comment": {
              "description": "The additional comment information for the delivery",
              "type": "string"
            },
            "isAccessableWithSemiTrailerTruck": {
              "description": "Is accessible with a semi-trailer truck.",
              "type": "boolean"
            },
            "isAccessableWithMotorTruckWithTrailer": {
              "description": "Is accessible with a motor truck with a trailer.",
              "type": "boolean"
            },
            "isAccessableWithMotorTruck": {
              "description": "Is accessible with a motor truck.",
              "type": "boolean"
            },
            "deliveryDischargeOptions": {
              "description": "Discharge option for delivery",
              "enum": [
                "REAR_DISCHARGE_ONLY",
                "SIDE_DISCHARGE"
              ]
            },
            "isForkliftAvailable": {
              "description": "Indicates whether a forklift is needed.",
              "type": "boolean"
            },
            "isPalletTruckAvailable": {
              "description": "Indicates whether a pallet truck is needed.",
              "type": "boolean"
            },
            "isForkliftDesired": {
              "description": "Is a forklift desired.",
              "type": "boolean"
            },
            "sufficientManeuveringSpace": {
              "description": "Indicates whether the Maneuvering Space is sufficient.",
              "type": "boolean"
            },
            "alternativManeuveringSpace": {
              "description": "Describes the alternative discharge option",
              "type": "string"
            },
            "isHandDischargeNecessary": {
              "description": "Is hand unloading necessary",
              "type": "boolean"
            }
          }
        },
        "description": {
          "description": "A description of the shipment",
          "type": [
            "string",
            "null"
          ]
        },
        "deliveryDate": {
          "description": "The delivery date of the shipment",
          "type": [
            "integer",
            "null"
          ]
        },
        "replyDeadline": {
          "description": "The deadline date for the customer to answer",
          "type": [
            "integer",
            "null"
          ]
        },
        "shippingDate": {
          "description": "The shipping date of the shipment",
          "type": [
            "integer",
            "null"
          ]
        },
        "recordEmailAddresses": {
          "title": "Record Email Addresses",
          "description": "Email addresses associated with the shipment record",
          "type": "object",
          "properties": {
            "bccAddresses": {
              "description": "BCC addresses",
              "type": "string"
            },
            "ccAddresses": {
              "description": "CC addresses",
              "type": "string"
            },
            "toAddresses": {
              "description": "To addresses",
              "type": "string"
            }
          }
        },
        "status": {
          "description": "The status of the shipment",
          "type": "string",
          "enum": [
            "CANCELLED",
            "DELIVERED",
            "DELIVERY_NOTE_PRINTED",
            "INCOMING_CANCELLED",
            "INCOMING_GOODS_MOVEMENT_PRINTED",
            "INCOMING_MOVED_INTO_STORE",
            "INCOMING_SHIPPED",
            "IN_ROUTE",
            "NEW",
            "SHIPPED"
          ]
        },
        "recipientAddress": {
          "$ref": "https://codemeta.de/schemas/address",
          "description": "The recipient address of the shipment"
        },
        "invoiceAddress": {
          "$ref": "https://codemeta.de/schemas/address",
          "description": "The invoice address of the shipment"
        },
        "shipmentItems": {
          "type": "array",
          "items": {
            "description": "Items included in the shipment",
            "type": "object",
            "properties": {
              "articleId": {
                "description": "The ID of the article",
                "type": "string"
              },
              "articleNumber": {
                "description": "The number of the article",
                "type": "string"
              },
              "availability": {
                "description": "The availability of the item",
                "type": "string",
                "enum": [
                  "COMPLETELY_AVAILABLE",
                  "NOTHING_AVAILABLE",
                  "NOT_CHECKED",
                  "PARTIALLY_AVAILABLE"
                ]
              },
              "availabilityForAllWarehouses": {
                "description": "The availability of the item for all warehouses",
                "type": "string",
                "enum": [
                  "COMPLETELY_AVAILABLE",
                  "NOTHING_AVAILABLE",
                  "NOT_CHECKED",
                  "PARTIALLY_AVAILABLE"
                ]
              },
              "createdDate": {
                "description": "The created date of the shipment item",
                "type": "integer"
              },
              "description": {
                "description": "The description of the shipment item",
                "type": "string"
              },
              "freeTextItem": {
                "description": "Whether it is a free text item",
                "type": "boolean"
              },
              "groupName": {
                "description": "The group name of the shipment item",
                "type": "string"
              },
              "manualQuantity": {
                "description": "Whether the quantity was set manually",
                "type": "boolean"
              },
              "note": {
                "description": "The note of the shipment item",
                "type": "string"
              },
              "positionNumber": {
                "description": "The position number of the shipment item",
                "type": "integer"
              },
              "quantity": {
                "description": "The quantity of the shipment item",
                "type": "string"
              },
              "title": {
                "description": "The title of the shipment item",
                "type": "string"
              },
              "unitName": {
                "description": "The unit name of the shipment item",
                "type": "string"
              }
            }
          }
        },
        "paperless": {
          "description": "The id of the paperless confirmation of arrival",
          "type": [
            "integer",
            "null"
          ]
        }
      },
      "required": [
        "shipmentNumber",
        "shippingDate",
        "recordEmailAddresses",
        "status",
        "recipientAddress",
        "invoiceAddress",
        "shipmentItems"
      ],
      "name": "shipment"
    },
    "instance": {
      "$id": "https://codemeta.de/schemas/instance",
      "title": "Instance",
      "name": "instance",
      "collection": "instances",
      "description": "An instance of a process with info on the execution",
      "type": "object",
      "i18n": {
        "de": {
          "singular": "Prozess-Instanz",
          "plural": "Prozess-Instanzen",
          "description": "Eine Instanz eines Prozesses enth√§lt Informationen zu konkreten Ereignissen und Aktionen."
        }
      },
      "properties": {
        "title": {
          "description": "The title of the process",
          "type": "string"
        },
        "description": {
          "description": "The description of the process",
          "type": "string"
        },
        "process": {
          "description": "The running process",
          "type": "string",
          "objectId": true
        },
        "status": {
          "description": "The status of the process",
          "type": "string",
          "enum": [
            "running",
            "ready",
            "completed",
            "error",
            "waiting"
          ]
        },
        "data": {
          "description": "The data produced by the process",
          "type": "object"
        },
        "steps": {
          "description": "The steps of the process",
          "type": "array",
          "items": {
            "type": "object"
          }
        },
        "createdAt": {
          "description": "The creation date of the instance",
          "type": "string",
          "format": "date-time"
        },
        "lastChecked": {
          "description": "The last time the instance was checked",
          "type": "string",
          "format": "date-time"
        },
        "linkedTo": {
          "description": "The objects linked to this instance",
          "type": "array",
          "items": {
            "type": "string",
            "objectId": true
          }
        },
        "tenant": {
          "description": "The tenant that owns the instance",
          "type": "string"
        },
        "runner": {
          "description": "The runner that is running the instance",
          "type": "string"
        }
      }
    },
    "notification": {
      "$id": "https://codemeta.de/schemas/notification",
      "title": "Notification",
      "name": "notification",
      "collection": "notifications",
      "description": "A push notification that is sent to a user",
      "type": "object",
      "properties": {
        "title": {
          "description": "The title of the notification",
          "type": "string"
        },
        "body": {
          "description": "The body of the notification",
          "type": "string"
        },
        "image": {
          "description": "An url to an image for the notification",
          "type": "string"
        },
        "status": {
          "description": "The status of the notification",
          "type": "string",
          "enum": [
            "new",
            "delivering",
            "delivered",
            "seen"
          ]
        },
        "user": {
          "description": "The user that the notification is sent to",
          "type": "string",
          "target": "https://codemeta.de/schemas/user",
          "objectId": true,
          "database": "config"
        },
        "requireInteraction": {
          "description": "Whether the notification requires interaction",
          "type": "boolean"
        },
        "actions": {
          "description": "The actions that the notification can have",
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "action": {
                "description": "A string identifier for the action",
                "type": "string"
              },
              "title": {
                "description": "The title of the action",
                "type": "string"
              },
              "icon": {
                "description": "An icon url for the action",
                "type": "string"
              }
            }
          }
        }
      },
      "required": [
        "title",
        "user"
      ],
      "config": true,
      "database": "config"
    },
    "user": {
      "$id": "https://codemeta.de/schemas/user",
      "title": "User",
      "name": "user",
      "collection": "users",
      "description": "A user",
      "i18n": {
        "de": {
          "singular": "Profil",
          "plural": "Profile",
          "description": "Benutzerprofile mit Kontaktdaten"
        }
      },
      "type": "object",
      "properties": {
        "email": {
          "type": "string",
          "format": "email",
          "description": "The user's email address"
        },
        "password": {
          "type": "string",
          "description": "The user's password hash (argon2id)"
        },
        "secret": {
          "type": "string",
          "description": "The user's TOTP secret"
        },
        "confirmed": {
          "type": "boolean",
          "description": "Whether the user has confirmed their email address"
        },
        "token": {
          "type": "string",
          "description": "A token generated for email validation or password reset"
        },
        "firstName": {
          "type": "string",
          "description": "The user's first name"
        },
        "lastName": {
          "type": "string",
          "description": "The user's last name"
        },
        "mobilePhone": {
          "type": "string",
          "description": "The user's mobile phone number"
        },
        "company": {
          "type": "string",
          "description": "The user's company"
        },
        "role": {
          "type": "string",
          "description": "The user's role",
          "objectId": true,
          "target": "https://codemeta.de/schemas/role"
        },
        "jobTitle": {
          "type": "string",
          "description": "The user's job title"
        },
        "tenant": {
          "type": "string",
          "description": "The user's tenant slug (NOT THE ID)"
        },
        "tanssEmployeeId": {
          "type": "number",
          "description": "The user's tanss employee id"
        }
      },
      "config": true,
      "database": "config",
      "unevaluatedProperties": false
    },
    "file": {
      "$id": "https://codemeta.de/schemas/file",
      "name": "file",
      "title": "File",
      "plural": "files",
      "collection": "files",
      "description": "A file document in the database. The corresponding file is in S3.",
      "i18n": {
        "de": {
          "singular": "Datei",
          "plural": "Dateien",
          "description": "Dateien wie Profilbilder, Anh√§nge, etc."
        }
      },
      "type": "object",
      "properties": {
        "description": {
          "type": "string",
          "description": "A description of the file."
        },
        "filename": {
          "type": "string",
          "description": "The name of the file. It can include slashes for the path in S3."
        },
        "size": {
          "type": "integer",
          "description": "The size of the file in bytes."
        },
        "type": {
          "type": "string",
          "description": "The MIME type of the file."
        },
        "linkedDocuments": {
          "type": "array",
          "description": "The documents that are linked to this file.",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "The ID of the linked document."
              },
              "collection": {
                "type": "string",
                "description": "The collection of the linked document."
              }
            }
          }
        },
        "maxSize": {
          "type": "integer",
          "description": "The maximum size of the file in bytes.",
          "default": 10000000000,
          "minimum": 0,
          "maximum": 10000000000
        },
        "expiresAt": {
          "type": "string",
          "format": "date-time",
          "description": "The date at which the file expires."
        }
      },
      "required": [
        "filename"
      ],
      "unevaluatedProperties": false
    },
    "article": {
      "$id": "https://codemeta.de/schemas/article",
      "title": "Article",
      "collection": "articles",
      "description": "An article",
      "type": "object",
      "properties": {
        "articleNumber": {
          "description": "The articleNumber of the article",
          "type": "string"
        },
        "name": {
          "description": "The name of the article",
          "type": [
            "string",
            "null"
          ]
        },
        "description": {
          "description": "The description of the article",
          "type": [
            "string",
            "null"
          ]
        }
      },
      "longText": {
        "description": "The longText of the article",
        "type": [
          "string",
          "null"
        ]
      },
      "unitName": {
        "description": "The unitName of the article",
        "type": "string"
      },
      "required": [
        "articleNumber"
      ],
      "name": "article",
      "unevaluatedProperties": false
    },
    "address": {
      "$id": "https://codemeta.de/schemas/address",
      "title": "Address",
      "collection": "addresses",
      "description": "An address",
      "type": "object",
      "properties": {
        "street1": {
          "description": "The street and house number",
          "type": "string"
        },
        "street2": {
          "description": "The street and house number",
          "type": "string"
        },
        "zipcode": {
          "description": "The zipcode",
          "type": "string"
        },
        "city": {
          "description": "The city",
          "type": "string"
        },
        "countryCode": {
          "description": "The country",
          "type": "string",
          "maxLength": 2
        },
        "company": {
          "description": "The company",
          "type": "string"
        },
        "company2": {
          "description": "The company",
          "type": "string"
        },
        "firstName": {
          "description": "The first name",
          "type": "string"
        },
        "globalLocationNumber": {
          "description": "The global location number",
          "type": "string"
        },
        "lastName": {
          "description": "The last name",
          "type": "string"
        },
        "middleName": {
          "description": "The middle name",
          "type": "string"
        },
        "phoneNumber": {
          "description": "The phone number",
          "type": "string"
        },
        "postOfficeBoxCity": {
          "description": "The post office box city",
          "type": "string"
        },
        "postOfficeBoxNumber": {
          "description": "The post office box number",
          "type": "string"
        },
        "postOfficeBoxZipCode": {
          "description": "The post office box zip code",
          "type": "string"
        },
        "salutation": {
          "description": "The salutation",
          "type": "string",
          "enum": [
            "COMPANY",
            "FAMILY",
            "MR",
            "MRS",
            "NO_SALUTATION"
          ]
        },
        "state": {
          "description": "The state",
          "type": "string"
        },
        "title": {
          "description": "The title",
          "type": "string"
        },
        "titleId": {
          "description": "The title ID",
          "type": "string"
        }
      },
      "required": [],
      "name": "address",
      "unevaluatedProperties": true
    },
    "store": {
      "$id": "https://codemeta.de/schemas/store",
      "title": "Store",
      "collection": "stores",
      "description": "A store where a tenant can offer services to another tenant",
      "type": "object",
      "properties": {
        "title": {
          "description": "The title of the store",
          "type": [
            "string",
            "null"
          ]
        },
        "description": {
          "description": "The description of the store",
          "type": [
            "string",
            "null"
          ]
        },
        "articles": {
          "description": "The articles in the store",
          "type": [
            "array",
            "null"
          ],
          "items": {
            "type": "object",
            "properties": {
              "article": {
                "type": "string",
                "objectId": true,
                "target": "https://codemeta.de/schemas/article"
              },
              "price": {
                "type": "number"
              }
            }
          }
        },
        "linkedParty": {
          "description": "The party that the store is for",
          "type": [
            "string",
            "null"
          ],
          "objectId": true,
          "target": "https://codemeta.de/schemas/party"
        }
      },
      "required": [],
      "name": "store",
      "unevaluatedProperties": false
    },
    "vacationRequest": {
      "$id": "https://codemeta.de/schemas/vacationRequest",
      "title": "Vacation Request",
      "collection": "vacationRequests",
      "description": "A vacation request by a user",
      "type": "object",
      "properties": {
        "description": {
          "description": "A comment by the requesting user",
          "type": [
            "string",
            "null"
          ]
        },
        "startDate": {
          "description": "The start date of the vacation",
          "type": "string",
          "format": "date"
        },
        "endDate": {
          "description": "The end date of the vacation",
          "type": "string",
          "format": "date"
        },
        "status": {
          "description": "The status of the request",
          "type": "string",
          "enum": [
            "pending",
            "approved",
            "rejected"
          ],
          "default": "pending"
        },
        "feedback": {
          "description": "Feedback from the manager",
          "type": [
            "string",
            "null"
          ]
        }
      },
      "required": [],
      "name": "vacationRequest",
      "unevaluatedProperties": false
    },
    "request": {
      "$id": "https://codemeta.de/schemas/request",
      "title": "Request",
      "collection": "requests",
      "description": "A support request",
      "type": "object",
      "properties": {
        "title": {
          "description": "The subject of the request",
          "type": "string"
        },
        "description": {
          "description": "The content of the request",
          "type": "string"
        },
        "linkedParty": {
          "description": "The party linked to the request",
          "type": "string",
          "relation": "manyToOne",
          "target": "https://codemeta.de/schemas/party"
        },
        "team": {
          "description": "The team of the request",
          "type": "string",
          "relation": "manyToOne",
          "target": "https://codemeta.de/schemas/team"
        },
        "status": {
          "description": "The status of the request",
          "type": "string"
        },
        "tanss": {
          "description": "The tanss ID of the request",
          "type": "number"
        }
      },
      "required": [
        "title",
        "content"
      ],
      "name": "request",
      "unevaluatedProperties": false,
      "inheritPermissionsFrom": "linkedParty"
    },
    "callback": {
      "$id": "https://codemeta.de/schemas/callback",
      "title": "Callback",
      "collection": "callbacks",
      "name": "callback",
      "description": "A callback",
      "type": "object",
      "i18n": {
        "de": {
          "singular": "R√ºckruf",
          "plural": "R√ºckrufe",
          "description": "Ein R√ºckruf repr√§sentiert einen R√ºckrufwunsch eines Kunden."
        }
      },
      "properties": {
        "caller": {
          "description": "The caller",
          "type": "string"
        },
        "phoneNumber": {
          "description": "The phone number",
          "type": "string"
        },
        "company": {
          "description": "The company",
          "type": "string"
        },
        "orderReference": {
          "description": "The order reference",
          "type": "string"
        },
        "availableFrom": {
          "description": "The date-time from which the caller is available",
          "type": "string",
          "format": "date-time"
        },
        "availableUntil": {
          "description": "The date-time from which the caller is no longer available",
          "type": "string",
          "format": "date-time"
        },
        "toBeHandledBy": {
          "description": "To be handled by",
          "type": "string",
          "relation": "manyToOne",
          "target": "https://codemeta.de/schemas/user",
          "objectId": true,
          "database": "config"
        },
        "spectators": {
          "description": "Spectators",
          "type": "array",
          "items": {
            "type": "string",
            "relation": "manyToOne",
            "target": "https://codemeta.de/schemas/user",
            "objectId": true
          }
        },
        "description": {
          "description": "The description",
          "type": "string"
        },
        "priority": {
          "description": "The priority",
          "type": "string",
          "enum": [
            "A",
            "B",
            "C",
            "D",
            "E"
          ]
        },
        "status": {
          "description": "The status",
          "type": "string",
          "enum": [
            "new",
            "pending",
            "completed"
          ],
          "default": "new"
        },
        "completedAt": {
          "description": "The date-time when the callback was completed",
          "type": "string",
          "format": "date-time"
        }
      },
      "searchable": true,
      "required": [
        "caller",
        "phoneNumber",
        "priority"
      ],
      "additionalProperties": false
    },
    "bookmark": {
      "$id": "https://codemeta.de/schemas/bookmark",
      "title": "Bookmark",
      "collection": "bookmarks",
      "description": "A bookmark",
      "type": "object",
      "i18n": {
        "de": {
          "singular": "Lesezeichen",
          "plural": "Lesezeichen",
          "description": "Lesezeichen sind Links zu anderen Websites und Dateien"
        }
      },
      "properties": {
        "url": {
          "description": "The url of the bookmark",
          "type": "string"
        },
        "title": {
          "description": "The title of the bookmark",
          "type": "string"
        },
        "group": {
          "description": "The group of the bookmark",
          "type": "string"
        }
      },
      "required": [
        "url",
        "title",
        "group"
      ],
      "name": "bookmark",
      "unevaluatedProperties": false
    },
    "team": {
      "$id": "https://codemeta.de/schemas/team",
      "title": "Team",
      "name": "team",
      "collection": "teams",
      "description": "A team",
      "type": "object",
      "i18n": {
        "de": {
          "singular": "Team",
          "plural": "Teams",
          "description": "Teams, die bei Codemeta angelegt wurden"
        }
      },
      "properties": {
        "title": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "members": {
          "type": "array",
          "items": {
            "type": "string",
            "objectId": true,
            "description": "The user's member ID",
            "relation": "manyToOne",
            "target": "https://codemeta.de/schemas/user",
            "database": "config"
          }
        },
        "managers": {
          "type": "array",
          "items": {
            "type": "string",
            "objectId": true,
            "description": "The manager's users IDs",
            "relation": "manyToOne",
            "target": "https://codemeta.de/schemas/user",
            "database": "config"
          }
        },
        "tenant": {
          "type": "string",
          "description": "The team's tenant slug (NOT THE ID)"
        }
      },
      "config": true,
      "version": "1.0",
      "unevaluatedProperties": false
    },
    "datasource": {
      "$id": "https://codemeta.de/schemas/datasource",
      "title": "Datasource",
      "name": "datasource",
      "collection": "datasources",
      "description": "A datasource",
      "type": "object",
      "properties": {
        "source": {
          "description": "The origin source of the datasource",
          "type": "string"
        },
        "sourceId": {
          "description": "The id in the source's system",
          "type": "string"
        },
        "recordId": {
          "description": "Object Id of the record in our database",
          "type": "string",
          "objectId": true
        },
        "collection": {
          "description": "The collection of the data inside the toast database",
          "type": "string"
        },
        "schema": {
          "description": "The schema of the data",
          "type": "string"
        },
        "queryInterval": {
          "description": "The interval at which the datasource should be queried",
          "type": "string"
        },
        "queriedAt": {
          "description": "The last time the datasource was queried",
          "type": "string",
          "format": "date-time"
        },
        "lastQueryResult": {
          "description": "The result of the last query",
          "type": "object"
        }
      },
      "required": [
        "schema",
        "source"
      ],
      "unevaluatedProperties": false
    },
    "printjob": {
      "$id": "https://codemeta.de/schemas/printjob",
      "title": "Printjob",
      "collection": "printjobs",
      "name": "printjob",
      "description": "A printjob",
      "type": "object",
      "i18n": {
        "de": {
          "singular": "Printjob",
          "plural": "Printjob",
          "description": "Ein Druckauftrag f√ºr einen angebundenen Drucker."
        }
      },
      "properties": {
        "file": {
          "type": "string",
          "description": "The file to be printed.",
          "objectId": true,
          "target": "https://codemeta.de/schemas/file"
        },
        "printer": {
          "type": "string",
          "description": "The token of the printer to print on."
        },
        "quantity": {
          "type": "number",
          "description": "The quantity of documents to print."
        },
        "status": {
          "type": "string",
          "description": "The status of the printjob.",
          "enum": [
            "pending",
            "printing",
            "printed",
            "failed"
          ]
        }
      },
      "required": [],
      "unevaluatedProperties": false
    },
    "database": {
      "$id": "https://codemeta.de/schemas/database",
      "title": "Database",
      "collection": "databases",
      "name": "database",
      "description": "A database registered at INWX",
      "type": "object",
      "i18n": {
        "de": {
          "singular": "Datenbank",
          "plural": "Datenbanken",
          "description": "Datenbanken, die bei Codemeta angelegt wurden"
        }
      },
      "properties": {
        "name": {
          "type": "string",
          "description": "The database name"
        },
        "customer": {
          "type": "string",
          "description": "The customer of the database.",
          "objectId": true,
          "target": "https://codemeta.de/schemas/party"
        },
        "usage": {
          "type": "array",
          "description": "An array of database sizes with timestamps",
          "items": {
            "type": "object",
            "properties": {
              "size": {
                "type": "number",
                "description": "The size of the database in bytes"
              },
              "date": {
                "type": "string",
                "format": "date-time",
                "description": "The timestamp of the size measurement"
              }
            }
          }
        }
      },
      "required": [],
      "unevaluatedProperties": false
    },
    "webserver": {
      "$id": "https://codemeta.de/schemas/webserver",
      "title": "Webserver",
      "collection": "webservers",
      "name": "webserver",
      "description": "A webserver container on web.codemeta.de",
      "type": "object",
      "i18n": {
        "de": {
          "singular": "Webserver",
          "plural": "Webserver",
          "description": "Ein Webserver, der im Codemeta-Web-Dienst konfiguriert wurde."
        }
      },
      "properties": {
        "title": {
          "type": "string",
          "description": "A title for the webserver."
        },
        "image": {
          "type": "string",
          "description": "The Docker image of the webserver."
        },
        "customer": {
          "type": "string",
          "description": "The customer of the webserver.",
          "objectId": true,
          "target": "https://codemeta.de/schemas/party"
        },
        "name": {
          "type": "string",
          "description": "The docker container name (without -1). e.g. codemeta-www"
        }
      },
      "required": [],
      "unevaluatedProperties": false
    },
    "webspace": {
      "$id": "https://codemeta.de/schemas/webspace",
      "title": "Webspace",
      "collection": "webspaces",
      "name": "webspace",
      "description": "A webspace container on web.codemeta.de",
      "type": "object",
      "i18n": {
        "de": {
          "singular": "Webspace",
          "plural": "Webspace",
          "description": "Ein Webspace, der im Codemeta-Web-Dienst konfiguriert wurde."
        }
      },
      "properties": {
        "title": {
          "type": "string",
          "description": "A title for the webspace."
        },
        "webserver": {
          "type": "string",
          "description": "The webserver to which this folder is mounted.",
          "objectId": true,
          "target": "https://codemeta.de/schemas/webserver"
        },
        "customer": {
          "type": "string",
          "description": "The customer of the webspace.",
          "objectId": true,
          "target": "https://codemeta.de/schemas/party"
        },
        "usage": {
          "type": "array",
          "description": "An array of usage parameters with timestamps",
          "items": {
            "type": "object",
            "properties": {
              "date": {
                "type": "string",
                "format": "date-time",
                "description": "The timestamp of the measurement."
              },
              "size": {
                "type": "number",
                "description": "The disk usage in bytes."
              }
            }
          }
        },
        "path": {
          "type": "string",
          "description": "The path of the webspace on the webserver."
        }
      },
      "required": [],
      "unevaluatedProperties": false
    },
    "webhook": {
      "$id": "https://codemeta.de/schemas/webhook",
      "title": "webhook",
      "collection": "webhooks",
      "name": "webhook",
      "description": "A webhook",
      "type": "object",
      "i18n": {
        "de": {
          "singular": "Webhook",
          "plural": "Webhooks",
          "description": "Ein Objekt, das von einem externen System an Codemeta √ºbermittelt wurde."
        }
      },
      "properties": {
        "body": {
          "type": "object",
          "description": "The body of the webhook"
        },
        "webserver": {
          "type": "string",
          "description": "The webserver to which this folder is mounted.",
          "objectId": true,
          "target": "https://codemeta.de/schemas/webserver"
        },
        "path": {
          "type": "string",
          "description": "The path which the webhook used"
        },
        "authenticated": {
          "type": "boolean",
          "description": "Whether the webhook was authenticated"
        }
      },
      "required": [],
      "unevaluatedProperties": false
    },
    "usage": {
      "$id": "https://codemeta.de/schemas/usage",
      "title": "Usage",
      "description": "Information about a usage",
      "type": "object",
      "collection": "usages",
      "i18n": {
        "de": {
          "singular": "Verbrauch",
          "plural": "Verbrauch",
          "description": "Der Verbrauch eines Artikels zu einem Kunden"
        }
      },
      "properties": {
        "subscription": {
          "description": "The subscription associated with the subscription",
          "type": "string",
          "objectId": true,
          "target": "https://codemeta.de/schemas/subscription"
        },
        "description": {
          "description": "The description",
          "type": "string"
        },
        "info": {
          "description": "The information array",
          "type": "object"
        },
        "startDate": {
          "description": "The interval start date",
          "type": "string",
          "format": "date-time"
        },
        "endDate": {
          "description": "The interval end date",
          "type": "string",
          "format": "date-time"
        },
        "quantity": {
          "description": "The quantity of the article",
          "type": "number",
          "default": 0
        }
      },
      "required": [
        "reference",
        "startDate",
        "endDate",
        "quantity"
      ],
      "name": "usage"
    },
    "event": {
      "$id": "https://codemeta.de/schemas/events",
      "title": "Events",
      "description": "Simple Version of a Tanss Support/Outlook Event",
      "type": "object",
      "collection": "events",
      "i18n": {
        "de": {
          "singular": "Termin",
          "plural": "Termine",
          "description": "Eine simple Version eines Tanss Supports/Outlook Events"
        }
      },
      "properties": {
        "title": {
          "description": "The Title of the event",
          "type": "string"
        },
        "description": {
          "description": "The Description of the event",
          "type": "string"
        },
        "start": {
          "description": "The date and Time when the event starts",
          "type": "string",
          "format": "date-time"
        },
        "end": {
          "description": "The date and Time when the event ends",
          "type": "string",
          "format": "date-time"
        },
        "plannedDuration": {
          "description": "The duration in Minutes from Start to End of the Event",
          "type": "number"
        },
        "type": {
          "description": "State or Type of the Event",
          "type": "string",
          "emum": [
            "inScheduling",
            "singleInstance",
            "occurrence",
            "exception",
            "seriesMaster"
          ]
        },
        "location": {
          "description": "Defines, where a support takes place",
          "type": "string",
          "emum": [
            "OFFICE",
            "CUSTOMER",
            "REMOTE"
          ]
        },
        "durationApproach": {
          "description": "The duration in Minutes that is added to an Event for the drive to a Customer. Only used if Location is CUSTOMER",
          "type": "number"
        },
        "owner": {
          "description": "The Name of the Technician responsible for the event",
          "type": "string",
          "objectId": true,
          "target": "https://codemeta.de/schemas/user"
        },
        "links": {
          "description": "Eventids in Tanns and Outlook",
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "tanssTicketId": {
                "description": "The Id of the Tanss Ticket",
                "type": "string"
              },
              "tanssSupportId": {
                "description": "The Id of the Tanss Support",
                "type": "string"
              },
              "outlookEventId": {
                "description": "The Id of the Outlook Event",
                "type": "string"
              },
              "tanssCompanyId": {
                "description": "The Id of the Company in Tanss",
                "type": "string"
              },
              "tannsEmployeeId": {
                "description": "The Id of the Employee in Tanss",
                "type": "string"
              }
            }
          }
        },
        "availableSlots": {
          "description": "Array containing all available TimeSlots for a proposed Event",
          "type": "array",
          "items": {
            "type": "object"
          }
        },
        "busyHours": {
          "description": "Array containing all busy time slots of the owner",
          "type": "array",
          "items": {
            "type": "object"
          }
        },
        "businessHours": {
          "description": "Array containing businessHours",
          "type": "array"
        },
        "bookedTimeslot": {
          "description": "Timeslot chosen by the customer; must be validated to appear as a valid event",
          "type": "object"
        },
        "attendees": {
          "description": "Recipient of event confirmation",
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "emailAddress": {
                "description": "The Email Address an Name of an Attendee",
                "type": "object",
                "properties": {
                  "address": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  }
                }
              },
              "type": {
                "type": "string",
                "enum": [
                  "required",
                  "optional",
                  "resource"
                ]
              },
              "status": {
                "type": "object",
                "properties": {
                  "response": {
                    "type": "string"
                  },
                  "time": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              }
            }
          }
        },
        "ownerFullName": {
          "description": "The full Name of the Event Owner",
          "type": "string"
        },
        "tenant": {
          "description": "The tenant slug of the tenant",
          "type": "string"
        }
      },
      "required": [],
      "name": "event"
    },
    "salesOrder": {
      "$id": "https://codemeta.de/schemas/salesOrder",
      "title": "SalesOrder",
      "description": "Information about a salesOrder",
      "type": "object",
      "name": "salesOrder",
      "collection": "salesOrders",
      "i18n": {
        "de": {
          "singular": "Auftrag",
          "plural": "Auftr√§ge",
          "description": "Auftr√§ge."
        }
      },
      "properties": {
        "customer": {
          "description": "The customer associated with the shipment",
          "type": "string",
          "objectId": true,
          "target": "https://codemeta.de/schemas/party",
          "relation": "manyToOne"
        },
        "orderNumber": {
          "type": "string",
          "description": "The order number of the sales order in weclapp"
        },
        "information": {
          "type": "string",
          "description": "Additional information about the sales order"
        },
        "orderNumberAtCustomer": {
          "type": "string",
          "description": "The order number of the sales order at the customer"
        },
        "status": {
          "type": "string",
          "description": "The status of the sales order",
          "enum": [
            "CANCELLED",
            "CLOSED",
            "MANUALLY_CLOSED",
            "ORDER_CONFIRMATION_PRINTED",
            "ORDER_ENTRY_IN_PROGRESS"
          ]
        },
        "shipped": {
          "type": "boolean",
          "description": "Indicates if the sales order has been shipped"
        }
      }
    },
    "interface": {
      "$id": "https://codemeta.de/schemas/interface",
      "title": "Interface",
      "name": "interface",
      "config": true,
      "database": "config",
      "collection": "interfaces",
      "description": "An interface is a contract between two software components. It defines the access keys and  operations that the components can use to communicate with each other.",
      "i18n": {
        "de": {
          "singular": "Schnittstelle",
          "plural": "Schnittstellen",
          "description": "Schnittstellen definieren den Zugriff auf externe Software und enthalten vertrauliche Informationen wie Zugangstoken"
        }
      },
      "properties": {},
      "unevaluatedProperties": true
    },
    "visitor": {
      "$id": "https://codemeta.de/schemas/visitor",
      "title": "Visitor",
      "collection": "visitors",
      "description": "A person visiting",
      "type": "object",
      "i18n": {
        "de": {
          "singular": "Besucher:in",
          "plural": "Besucher:innen",
          "description": "Personen, die vor Ort Termine wahrnehmen."
        }
      },
      "properties": {
        "name": {
          "description": "The name of the visitor",
          "type": "string"
        },
        "responsibleUserId": {
          "description": "The user ID of the responsible user",
          "type": "string",
          "objectId": true,
          "relation": "manyToOne",
          "target": "https://codemeta.de/schemas/user",
          "database": "config"
        },
        "scheduledArrival": {
          "description": "The scheduled arrival of the visitor",
          "type": "string",
          "format": "date-time"
        }
      },
      "required": [],
      "name": "visitor",
      "searchable": true
    },
    "comment": {
      "$id": "https://codemeta.de/schemas/comment",
      "title": "Comment",
      "collection": "comments",
      "description": "A comment",
      "type": "object",
      "i18n": {
        "de": {
          "singular": "Comment",
          "plural": "Comments",
          "description": "Eine Kommentarm√∂glichkeit welche schema √ºbergreifend ist."
        }
      },
      "properties": {
        "title": {
          "description": "The title of the comment",
          "type": "string"
        },
        "description": {
          "description": "The description",
          "type": "string"
        },
        "entityId": {
          "description": "The id of the entity",
          "type": "string",
          "objectId": true
        },
        "entityName": {
          "description": "The collection name of the entity",
          "type": "string"
        }
      },
      "required": [],
      "name": "comment",
      "searchable": true,
      "searchFields": [
        "entityId",
        "entityName"
      ]
    }
  }
}